
Коды компетенции (по ФГОС)
Результаты освоения ОП 
Содержание компетенций согласно ФГОС
Перечень планируемых результатов обучения по дисциплине
ОПК-1
способностью инсталлировать программное и аппаратное обеспечение для информационных и автоматизированных систем
Знать: современные технические и программные средства взаимодействия с ЭВМ, принципы построения современных операционных систем и особенности их применения.
Уметь: инсталлировать, тестировать, испытывать и использовать программно-аппаратные средства вычислительных и информационных систем, настраивать конкретные конфигурации операционных систем.
Владеть: навыками работы с различными операционными системами и их администрирования.
ОПК-4
способностью участвовать в настройке и наладке программно-аппаратных комплексов
Знать: принципы построения, параметры и характеристики цифровых и аналоговых элементов ЭВМ, технологию разработки алгоритмов и программ, методы отладки и решения задач на ЭВМ в различных режимах.
ПК-5
способностью сопрягать аппаратные и программные средства информационных и автоматизированных систем
 Знать: современные технические и программные средства взаимодействия с ЭВМ.
№ п/п
Контролируемые разделы
Контролируемые компетенции
Контролируемые уровни освоения компетенций
Наименование оценочного средства
1
Понятие и классификация операционных систем
ОПК-1, ОПК-4, ПК-5
пороговый
тест
2
Операционные оболочки
ОПК-1, ПК-5
пороговый, базовый
тест
3
Принципы и концепции мультипрограммирования
ОПК-4, ПК-5
пороговый, базовый
тест
4
Подсистема ввода/вывода. Файловые системы
ОПК-4, ПК-5
пороговый, базовый
тест
5
Основы системного программирования. Работа с файлами
ОПК-4, ПК-5
пороговый, базовый
тест
6
Управление памятью
ОПК-4, ПК-5
пороговый, базовый
тест
7
Многопоточные приложения. Синхронизация потоков
ОПК-4, ПК-5
продвинутый
контрольное задание
     
№ п/п
Формулировка вопроса
Варианты ответов
Понятие и классификация операционных систем
1
Операционная система выполняет следующую функцию:
a. Управление памятью 	
b. Управление процессами 	
c. Управление внешними устройствами 	
d. Все перечисленное
2
Операционная среда определяет:
a. Интерфейс прикладного программирования	
b. Особенности управления ресурсами системы 	
c. Интерфейс пользователя
3
Операционная система (в отличие от операционной среды и операционной оболочки) определяет:
a. Интерфейс прикладного программирования 	
b. Интерфейс пользователя 	
c. Особенности управления ресурсами системы
4
Операционная оболочка (в отличие от операционной среды и операционной системы) определяет:
a. Интерфейс прикладного программирования 	
b. Особенности управления ресурсами системы 	
c. Интерфейс пользователя
5
Операционные системы с многослойной архитектурой, по сравнению с монолитной, имеют следующее преимущество:
a. Имеют большую производительность 	
b. Проще проектировать 	
c. Проще отлаживать, дорабатывать, модифицировать
6
Микроядерная архитектура операционной системы предполагает, что:
a. Возможности операционной системы сильно ограничены 	
b. В режиме ядра работает минимально необходимая часть операционной системы 	
c. Отсутствует аппаратная поддержка операционной системы
7
Выполнение какого требования к операционной системе позволяет пользователю выполнить свои приложения в новой операционной системе?
a. масштабируемости 	
b. предсказуемости 	
c. совместимости 	
d. безопасности
Операционные оболочки
1
Команда echo off
a. Позволяет выводить данные не на экран, а в файл 
b. Отключит вывод команд на экран во время выполнения 
c. Выключит режим раннего связывания для переменных окружения
2
В командной строке Windows команда dir позволяет:
a. Переименовать только файлы (но не каталоги) 	
b. Изменить атрибуты файлов и каталогов 	
c. Получить список файлов и подкаталогов 	
d. Переименовать файлы и каталоги
3
В командной строке Windows команда md позволяет:
a. Создать каталог 	
b. Получить список файлов и подкаталогов 	
c. Изменить атрибуты файлов и каталогов 	
d. Удалить файл
4
В командном файле (.bat) оператор > используется:
a. Для перенаправления вывода в файл с записью в конец указанного файла 	
b. Для перенаправления вывода в файл с перезаписью указанного файла 	
c. Для извлечения параметров, переданных в командной строке
5
В командном файле (.bat) оператор >> используется:
a. Для перенаправления вывода в файл с перезаписью указанного файла 	
b. Для извлечения параметров, переданных в командной строке 	
c. Для перенаправления вывода в файл с записью в конец указанного файла
6
Следующая команда в сценарии (.bat):
echo %0
a. Выведет на экран имя сценария 	
b. Выведет на экран 0 	
c. Выведет на экран первый переданный сценарию параметр 	
d. Выведет на экран %0
Принципы и концепции мультипрограммирования
1
Главным объектом WSH, позволяющим создавать другие объекты, является:
a. WScript 	
b. Функция main() 	
c. WMain
2
Для создания объекта в WSH используется функция:
a. WScript.Echo 	
b. WScript.CreateObject 	
c. Main.Create
3
Для запуска WSH сценария C:\test.js в консольном режиме, в командной строке необходимо набрать:
a. C:\test.js 	
b. cscript C:\test.js 	
c. wscript C:\test.js
4
Особенностью переменных JScript является:
a. Необходимо указать тип при объявлении 	
b. Тип присваивается при записи значения 	
c. В переменных нельзя хранить текст
5
Преимуществом WSH по сравнению с пакетными файлами Windows является:
a. Наличие полноценных циклов и условий 	
b. Возможность выполнить несколько консольных команд из одного сценария 	
c. Возможность редактировать сценарий в текстовом редакторе
Подсистема ввода/вывода. Файловые системы
1
В операционной системе Windows каталоги (например при использовании файловой системы FAT):
a. Образуют древовидную структуру 	
b. Образуют сетевую структуру 	
c. Изолированы, один каталог не может находиться внутри другого
2
Особенностью использования файловых систем в ОС Windows является:
a. Файловые системы монтируются в единое дерево 
b. Файловые системы используются независимо (автономно) 	
c. Может использоваться ровно одна файловая система
3
Монтирование предполагает:
a. Объединение нескольких файловых систем в единое дерево 	
b. Создание специальных файлов, ассоциированных с устройствами ввода-вывода 	
c. Удаление всех файлов и создание новой файловой системы
4
Особенностью файловой системы FAT является:
a. В одном кластере может храниться два и более файлов 	
b. Файл всегда занимает целое число кластеров, поэтому дисковое пространство обычно используется неоптимально 	
c. Кластеры используются только для хранения каталогов
5
Особенностью жесткой ссылки является:
a. Различают первичную жесткую ссылку и второстепенные 	
b. Файл полностью удаляется, если удалить любую жесткую ссылку 	
c. Файл не будет удален, пока имеется хотя бы одна жесткая ссылка
6
Особенностью ярлыка Windows является:
a. С точки зрения файловой системы ярлык является обычным файлом 	
b. При удалении ярлыка файл также будет удален 
c. Файл не будет удален, пока есть хотя бы один ярлык, указывающий на него
7
Примером корневого каталога в Windows в файловой системе FAT является:
a. C:\ 	
b. C:\SYSTEM 	
c. C:\WINDOWS
8
Что такое каталоги?
a. это обычные файлы, отображенные на адресное пространство процесса по указанному виртуальному адресу 	
b. это фиктивные файлы, ассоциированные с устройствами ввода-вывода 	
c. это системные файлы, обеспечивающие поддержку структуры файловой системы 	
d. циклические буферы, позволяющие выходной файл одной программы соединить со входным файлом другой программы
Основы системного программирования. Работа с файлами
1
Алгоритмы планирования потоков, где решения о смене и выборе активного потока принимаются операционной системой называются:
a. Невытесняющими 	
b. Системными 	
c. Вытесняющими
2
Алгоритмы планирования потоков, где потоку позволяется выполняться, пока он сам, по собственной инициативе не отдаст управление операционной системе, называются:
a. Системными 	
b. Невытесняющими 	
c. Вытесняющими
3
Критическая секция это:
a. Участок исполняемого кода 	
b. Конструктивная часть процессора 	
c. Данные
4
Недостатком систем разделения времени является:
a. Накладные расходы при переключении между задачами 	
b. Отсутствие интерактивности 	
c. Невозможность распараллелить вычисления и ввод-вывод
5
Особенностью систем реального времени является:
a. Предназначены для решения вычислительных задач 	
b. Основной критерий при проектировании - удобство пользователя 	
c. При проектировании закладывается запас вычислительной мощности
6
Преимуществом систем пакетной обработки является:
a. Пригодность для систем реального времени 	
b. Интерактивность 	
c. Хорошая пропускная способность (которая выражается в количестве задач, выполняемых за единицу времени)
7
Выберите правильное утверждение:
a. Процесс не может иметь более одного потока 	
b. В настоящее время процесс и поток - это одно и то же 	
c. Несколько потоков могут принадлежать одному процессу
8
Возможность параллельного выполнения вычислений и ввода-вывода позволяет:
a. Уменьшить время выполнения каждой задачи 	
b. Использовать центральный процессор для прямого управления вводом-выводом 	
c. Уменьшить суммарное время выполнения нескольких задач
Управление памятью
1
Microsoft Windows использует:
a. Сегментное распределение памяти 	
b. Распределение памяти перемещаемыми разделами 
c. Страничное распределение памяти
2
Виртуальная память позволяет:
a. Защитить процессы друг от друга 	
b. Обеспечить предсказуемость времени доступа к памяти 	
c. Обойтись без аппаратной поддержки при управлении памятью
3
Виртуальная страница при страничном распределении памяти:
a. Не может отсутствовать, все адреса виртуального адресного пространства всегда доступны 	
b. Может располагаться исключительно во внешней памяти 	
c. Располагается либо в физической памяти, либо во внешней памяти, либо отсутствует
4
Модули оперативной памяти на материнской плате, это:
a. Виртуальная память 	
b. Регистры процессора 	
c. Внешняя память 	
d. Физическая память
5
Недостатком виртуальной памяти является:
a. Фрагментация памяти 	
b. Непредсказуемое время доступа к памяти 	
c. Процесс, требующий памяти больше, чем реально есть в системе загрузить нельзя
6
Недостатком оверлеев является:
a. Необходимость целиком загружать и выгружать образ процесса 	
b. Процесс, требующий памяти больше, чем реально есть в системе, загрузить нельзя 	
c. Необходимость для прикладной программы самостоятельно реализовывать управление памятью
7
Преимуществом виртуальной памяти является:
a. Возможность скрыть от прикладной программы реальную организацию памяти 	
b. Простота реализации 	
c. Нет необходимости аппаратной поддержки
8
При использовании виртуальной памяти:
a. Размер выделенной памяти фиксируется в момент запуска программы и в дальнейшем не может быть изменен 	
b. Программа может использовать памяти больше, чем объем физической (оперативной) памяти 	
c. Доступны средства для создания виртуальной реальности
9
При страничном распределении памяти:
a. Адресное пространство приложения не может превышать размеры физической памяти 	
b. Исполняемый код и данные могут храниться в отдельных адресных пространствах 	
c. Программист работает с одним линейным адресным пространством
10
При страничном распределении памяти:
a. Память делится на страницы одинакового размера 
b. Память делится на страницы произвольного размера 	
c. Размер любой страницы может измениться в процессе работы приложения
11
Свопинг предполагает, что:
a. Внешняя память не используется 	
b. Процесс самостоятельно управляет распределением памяти 	
c. Образы процессов выгружаются на диск и возвращаются в оперативную память целиком
12
Страничное распределение памяти предполагает:
a. Возможность управлять физической памятью для каждого процесса 	
b. Деление адресного пространства на части произвольного размера 	
c. Использование внешней памяти
№ п/п
Формулировка вопроса
Варианты ответов
Пакетные файлы
1
Для получения первого параметра, переданного в командный файл Windows (.bat) необходимо использовать следующее выражение:
a. $PARAM[0] 	
b. %~x1 	
c. $PARAM[1] 	
d. %1 	
e. %0
2
Для использования связывания времени выполнения (то есть чтобы в составных выражениях подставлялись актуальные значения переменных окружения) в командном файле Windows необходимо использовать следующий синтаксис:
a. ?k? для переменной k 	
b. &k& для переменной k 	
c. %k% для переменной k 	
d. !k! для переменной k
3
Следующий сценарий:
SET /a k=0
FOR /R %%i IN (*) do set /a k=k+1
echo %k%
a. Выведет на экран все файлы, в именах которых есть "i" 	
b. Выведет на экран все имена файлов в текущем каталоге, включая подкаталоги 	
c. Подсчитает количество файлов в текущем каталоге, включая файлы в подкаталогах 	
d. Выведет на экран все имена файлов в текущем каталоге, не включая подкаталоги
4
Следующая команда в сценарии:
dir /B *.doc>>1.txt
a. Переименует файл "*.doc" в "1.txt" 	
b. Содержит ошибку 	
c. Изменит расширения файлов с "doc" на "txt" 	
d. Добавит список файлов с расширением "doc" в файл "1.txt"
5
Следующая команда в сценарии:
attrib +R %1
a. Добавит атрибут "Только чтение" для всех файлов, имена которых содержат "1" 	
b. Запросит у пользователя имя одного файла и атрибут для установки 	
c. Содержит ошибку 	
d. Добавит атрибут "Только чтение" для файла, имя которого передано в первом параметре
Сценарии WSH
1
В JScript сценарии имеется конструкция:
for(i in B) S+=B[i];

В данном случае:
a. К переменной S будет добавлена сумма всех элементов массива B 	
b. Используется неверный синтаксис для цикла for 
c. К переменной S будет добавлено значение первого элемента массива B 	
2
Для вывода значения переменной K в JScript можно использовать конструкцию:
a. printf("%s",K); 	
b. Echo K; 	
c. WScript.Echo(K);
3
Для запуска приложения из WSH сценария можно использовать объект:
a. WScript.Shell 	
b. WScript.StdOut 	
c. Scripting.FileSystemObject
4
Для получения имени пользователя в WSH сценарии можно использовать объект:
a. Scripting.FileSystemObject 	
b. WScript.StdOut 	
c. Wscript.Network
5
Для того, чтобы в WSH запросить у пользователя данные в консоли, можно использовать функцию:
a. scanf 	
b. Main.ReadFromConsole 	
c. WScript.StdIn.ReadLine
Файловые системы
1
В файловой системе FAT в записи каталога о файле хранится:
a. Список всех кластеров 	
b. Смещение начала файла в байтах относительно начала области данных 	
c. Номер первого кластера
2
Если кластер в файловой системе FAT не последний в файле, в соответствующем ему индексном указателе хранится:
a. Номер предыдущего кластера 	
b. Специальное значение "кластер занят" 	
c. Номер следующего кластера
3
Журналирование файловой системы позволяет:
a. Сохранить данные, находящиеся в кэше при отключении питания 	
b. Сохранить целостность файловой системы 	
c. Узнать, кто и когда создавал, удалял и редактировал файлы
4
Особенностью файловой системы FAT является:
a. Размер кластера не фиксирован и выбирается динамически, в процессе записи файла на диск. 	
b. Файл всегда располагается в смежных кластерах 
c. Корневой каталог занимает фиксированную область
5
Отличие FAT16 от FAT32 состоит в:
a. Размере кластера: 16 или 32 байта 	
b. Разрядности индексных указателей 	
c. Разрядности операционной системы, под которой используется данная файловая система
6
Для получения списка кластеров файла в FAT необходимо:
a. Прочитать запись в каталоге для данного файла 
b. Восстановить цепочку кластеров с помощью таблицы индексных указателей (FAT-таблицы)
c. Всстановить цепочку кластеров, прочитав по очереди их содержимое 	
7
При появлении испорченной области на жестком диске, использующем файловую систему FAT:
a. Соответствующие кластеры помечаются в таблице индексных указателей специальным значением 	
b. В особую область добавляется список плохих кластеров 	
c. Невозможно далее использовать диск
8
Фрагментация в файловой системе может означать, что:
a. Файл занимает меньше одного кластера 	
b. Соседние участки файла располагаются в несмежных участках диска 	
c. Файл хранится в двух и более смежных кластерах
Мультипрограммирование
1
При использовании флага CREATE_SUSPENDED в функции CreateThread:
a. Запускается новый поток, текущий поток приостанавливается 	
b. Новый поток не может начать работу сразу после создания 	
c. Новый поток не может быть приостановлен
2
Параметр lpStartAddress функции CreateThread определяет:
a. Адрес возврата, на который должно передаться управление после завершения потока 	
b. Адрес функции, которая "реализует" поток 	
c. Идентификатор процесса, для которого создается поток
3
Глобальные переменные:
a. Могут использоваться только главным потоком 
b. Не могут использоваться потоками 	
c. Могут использоваться любым потоком процесса
4
Каждый поток в Windows:
a. Имеет персональный стек 	
b. На все время работы занимает в эксклюзивное пользование одно ядро процессора 	
c. Имеет личное пространство адресов виртуальной памяти
5
С потоком ассоциируется:
a. Контекст выполнения 	
b. Виртуальное адресное пространство 	
c. Файловые дескрипторы
6
С процессом (в отличие от потока) ассоциируется:
a. Процессорное время 	
b. Стек 	
c. Память
7
В вашей программе есть необходимость обеспечить синхронизацию потоков при доступе к пулу из 6 объектов. В этом случае целесообразно использовать:
a. Семафор 	
b. Мьютекс (Mutex) 	
c. Событие (Event)
8
В вашей программе есть необходимость приостановить большое количество потоков до реакции пользователя. Т.е. после реакции пользователя сразу все потоки должны продолжить работу. В этом случае целесообразно использовать:
a. Мьютекс (Mutex) 	
b. Семафор 	
c. Событие (Event)
9
Большинство современных операционных систем:
a. Поддерживают многопоточность 	
b. Не являются многозадачными 	
c. Имеют невытесняющие алгоритмы многозадачности
Виртуальная память
1
Для преобразования виртуального адреса в физический при страничном распределении нет необходимости учитывать:
a. Размер страницы 	
b. Смещение внутри виртуальной страницы 	
c. Тип содержимого страницы, например исполняемый код или данные 	
d. Данные из таблицы страниц процесса
2
Для чтения данных из отображенного на память файла в ОС Windows необходимо использовать:
a. Указатель, возвращенный MapViewOfFile 	
b. Функцию ReadFile совместно с адресом области отображения 	
c. Хэндл, возвращенный CreateFileMapping
3
Какая функция используется в процессе отображения файла на память в ОС Windows:
a. CreateFileMapping 	
b. WriteFile 	
c. fopen
4
Какая функция (или функции) должна(ы) обязательно присутствовать в программе для отображения файла на память в ОС Windows:
a. Все перечисленные 	
b. CreateFileMapping 	
c. CreateFile 	
d. MapViewOfFile
5
Особенностью Microsoft Windows является:
a. Процессы используют 8-битные виртуальные адреса 	
b. Каждый процесс занимает 2 Гб физической памяти вплоть до его завершения 	
c. Значительная часть адресного пространства процесса зарезервирована для использования системой
6
Отображение файла на память предполагает:
a. Файл полностью загружается в системный кэш 
b. Можно работать с файлом как с участком памяти 	
c. Необходимо использовать SetFilePointer для доступа к файлу со сложной структурой
7
Почему размер страницы при страничном распределении выбирается кратным степени двойки?
a. Это просто традиция, которая на практике не дает никаких преимуществ 	
b. Так из виртуального адреса проще выделить номер страницы и смещение 	
c. Размер страницы выбирается по размеру кластера на диске
8
В системе используется страничное распределение памяти. Процесс имеет 8-битное адресное пространство. Размер страницы - 4 байта. Сколько всего страниц у процесса?
a. 256 	
b. 4 	
c. 16 	
d. 64 	
e. 32
9
В системе используется страничное распределение памяти. Процесс имеет 8-битное адресное пространство. Размер страницы - 8 байт. Сколько всего страниц у процесса?
a. 4 	
b. 16 	
c. 32 	
d. 256 	
e. 64
10
В системе используется страничное распределение памяти. Процесс имеет 8-битное адресное пространство. Размер страницы - 32 байта. Сколько всего страниц у процесса?
a. 32 	
b. 256 	
c. 16 	
d. 8 	
e. 64
11
Файл состоит из записей (структур) фиксированного размера, которые записаны строго одна за другой. В этом случае после отображения файла на память он будет выглядеть как:
a. Стек из соответствующих структур 	
b. Массив из соответствующих структур 	
c. Двусвязный список из соответствующих структур
12
Функция GetSystemInfo в ОС Windows позволяет:
a. Получить список потоков 	
b. Получить общую информацию о памяти и процессоре 	
c. Получить имя компьютера, домена и текущего пользователя
13
Функция VirtualLock в ОС Windows позволяет:
a. "Закрепить" страницы в физической памяти 
b. Отключить механизм виртуальной памяти 	
c. Сделать регион виртуальной памяти временно недоступным
Работа с файлами
1
Вам необходимо создать новый файл в ОС Windows. Однако, если файл уже существует, никакие действия не требуются, модифицировать существующий файл не нужно. В этом случае, в параметр dwCreationDisposition функции CreateFile необходимо передать:
a. CREATE_NEW 	
b. TRUNCATE_EXISTING 	
c. CREATE_ALWAYS
2
Вы открываете файл в ОС Windows с помощью функции CreateFile. Для того, чтобы получить права на чтение и запись, необходимо параметр dwDesiredAccess заполнить как:
a. GENERIC_READ & GENERIC_WRITE 	
b. GENERIC_READ | GENERIC_WRITE 	
c. GENERIC_WRITE 	
d. GENERIC_READ || GENERIC_WRITE 	
e. GENERIC_READ && GENERIC_WRITE
3
Параметр dwShareMode функции CreateFile в ОС Windows определяет:
a. Каким образом файл будет доступен по сети 	
b. Способ совместного доступа с другими процессами 	
c. Поведение при открытии файла (например нужно ли создавать файл, если он не существует)
4
Фрагмент программы для ОС Windows
if(FILE_ATTRIBUTE_READONLY==GetFileAttributes(L"file.dat"))
{
printf("OK");
}
проверит, что:
a. Файл имеет атрибут "только для чтения", и кроме него не имеет абсолютно никаких атрибутов 	
b. Файл имеет атрибут "только для чтения" 	
c. Файл НЕ имеет атрибута "только для чтения"
5
Для обеспечения совместного доступа к открываемому файлу в ОС Windows (т.е. так, чтобы другие процессы также могли одновременно с нами получить к нему доступ) необходимо в параметре dwShareMode функции CreateFile передать:
a. FILE_SHARE_READ | FILE_SHARE_WRITE 
b. 0 	
c. FILE_SHARE_READ & FILE_SHARE_WRITE
6
В случае, если функция CreateFile в ОС Windows не смогла открыть файл, например по причине конфликта совместного доступа, возвращаемое значение будет равно:
a. 0 	
b. INVALID_HANDLE_VALUE 	
c. Случайному значению
7
Фрагмент программы для ОС Windows:
int k=18;
WriteFile(hFile,&k,sizeof(k),&Bytes,NULL);
запишет в файл:
a. 2 байта, так как для записи числа 18 необходимо 2 символа 	
b. 4 байта, так как это размер типа int 	
c. 1 Кб, так как WriteFile не может манипулировать меньшими блоками
8
Следующий фрагмент программы:

int k = 186500;
FILE *f = fopen("file1.txt", "w+");
fprintf(f, "%d", k);

запишет в файл:
a. 6 байт 	
b. 8 байт 	
c. 2 байта 	
d. 4 байта
9
Следующий фрагмент программы:

int k = 23;
FILE *f = fopen("file1.txt", "w+");
fprintf(f, "%d", k);

запишет в файл:
a. 2 байта 	
b. 4 байта 	
c. 6 байт 	
d. 8 байт
10
При отсутствии флага LOCKFILE_FAIL_IMMEDIATELY, функция LockFileEx в ОС Windows:
a. Ждет, пока требуемый регион будет разблокирован 	
b. Ничего не ждет, немедленно завершается в любом случае 	
c. Принудительно разблокирует требуемый регион файла
11
Функция CreateFile в ОС Windows позволяет:
a. Только создать новый файл 	
b. Создать новый файл, но только текстовый 	
c. Создать новый файл или открыть существующий
12
Функция LockFileEx в ОС Windows:
a. Шифрует файл 	
b. Блокирует регион файла 	
c. Блокирует в любом случае весь файл целиком
13
Функция SetFilePointer в ОС Windows используется для:
a. Создания ярлыка файла 	
b. Отображения файла на память 	
c. Установки позиции (номер байта), откуда данные файла будут считываться или записываться
14
Функция WriteFile в ОС Windows позволяет:
a. Записать в файл произвольные данные, которые хранятся в памяти 	
b. Записывать в файл только те данные, которые ранее были считаны с помощью ReadFile 	
c. Записывать в файл только переменые, имеющие встроенные типы. Запись, например, структур невозможна
15
Для эксклюзивного открытия файла в ОС Windows (т.е. так, чтобы другие процессы не могли одновременно с нами получить к нему никакого доступа) необходимо в параметре dwShareMode функции CreateFile передать:
a. FILE_SHARE_READ | FILE_SHARE_WRITE 	
b. FILE_SHARE_READ & FILE_SHARE_WRITE 	
c. 0
№ п/п
Формулировка задания
1
В каталоге имеются файлы с различными расширениями. У пользователя периодически возникает задача составления списка файлов с определенным расширением. Расширения могут быть каждый раз разные. Необходимо автоматизировать данную задачу с использованием командных сценариев Windows. Использование командного сценария должно быть удобным для пользователя, интерфейс понятным, сценарий должен адекватно обрабатывать ошибки и исключительные ситуации. Список файлов необходимо записать в текстовый файл.
2
В каталоге имеются файлы с различными расширениями. Пользователю необходимо периодически делать файлы с определенным расширением скрытыми, либо наоборот видимыми. Расширения могут быть каждый раз разные. Необходимо автоматизировать данную задачу с использованием командных сценариев Windows. Использование командного сценария должно быть удобным для пользователя, интерфейс понятным, сценарий должен адекватно обрабатывать ошибки и исключительные ситуации.
3
На компьютере под управлением ОС Windows в каталоге имеются приложения "prog1" и "prog2", которые необходимо запускать с параметрами командной строки. Параметры выглядят как "a b c <in_param>", где <in_param> вводится каждый раз разный. Необходимо автоматизировать задачу запуска приложений с использованием одного командного сценария Windows. Использование командного сценария должно быть удобным для пользователя, интерфейс понятным, сценарий должен адекватно обрабатывать ошибки и исключительные ситуации. Работу приложений сымитируйте с помощью вспомогательных сценариев.
4
В каталоге имеются различные файлы. У пользователя периодически возникает задача составления списка файлов с определенным атрибутом. Атрибут может быть каждый раз разным (скрытый, только чтение, готов для архивирования). Необходимо автоматизировать данную задачу с использованием командных сценариев Windows. Использование командного сценария должно быть удобным для пользователя, интерфейс понятным, сценарий должен адекватно обрабатывать ошибки и исключительные ситуации. Список файлов необходимо записать в текстовый файл.
5
Приложение A запускает приложение B с передачей параметров. Параметры могут выглядеть как "a <param>" либо "b <param>", где вместо <param> может быть любое значение. После выхода обновления значение параметра "a" приложением B больше не обрабатывается. Вместо него необходимо использовать значение "u". Необходимо написать командный сценарий, который будет выступать в роли интерфейса для приложения B и обеспечит работоспособность системы. Работу приложений сымитируйте с помощью вспомогательных сценариев.
6
Необходимо написать командный сценарий Windows, формирующий список файлов заданного каталога и записывающий его в текстовый файл. Имя создаваемого текстового файла должно содержать текущую дату. Если файл сегодня уже создавался, модифицировать или перезаписывать его не нужно. Получить дату можно из переменной %date%.
7
В каталоге имеются файлы с различными расширениями. У пользователя периодически возникает задача удаления файлов с определенным расширением. Расширения могут быть каждый раз разные. Необходимо автоматизировать данную задачу с использованием командных сценариев Windows. Использование командного сценария должно быть удобным для пользователя, интерфейс понятным, сценарий должен адекватно обрабатывать ошибки и исключительные ситуации.
8
В каталоге имеются файлы с различными расширениями. У пользователя периодически возникает задача изменения(переименования) определенных расширений. Расширения могут быть каждый раз разные. Необходимо автоматизировать данную задачу с использованием командных сценариев Windows. Использование командного сценария должно быть удобным для пользователя, интерфейс понятным, сценарий должен адекватно обрабатывать ошибки и исключительные ситуации.
9
Приложение A запускает приложение B с передачей параметров. Параметры могут выглядеть как "a <param>" либо "b <param>", где вместо <param> может быть любое значение. Возникла задача поменять местами значения "a" и "b", т.е. при передаче приложению B параметра "a" оно должно получать "b", и наоборот. Необходимо написать командный сценарий, который будет выступать в роли интерфейса для приложения B и обеспечит решение задачи. Работу приложений сымитируйте с помощью вспомогательных сценариев.
10
Приложение A запускает приложение B с передачей параметров (не более трех). Возникла задача отладить приложение A, необходимо записать в текстовый файл параметры, которые передаются B с указанием даты и времени запуска. Необходимо написать командный сценарий, который будет выступать в роли интерфейса для приложения B и обеспечит необходимую функциональность. Работу приложений сымитируйте с помощью вспомогательных сценариев. Дату и время можно получить с помощью переменных %date% и %time%
11
Напишите командный сценарий, позволяющий выполнить ряд действий над файлом, имя и путь к которому вводит пользователь. Необходима поддержка следующих действий: удалить файл, переименовать файл, сделать скрытым. Использование командного сценария должно быть удобным для пользователя, интерфейс понятным, сценарий должен адекватно обрабатывать ошибки и исключительные ситуации.
12
Напишите командный сценарий, позволяющий запустить по очереди все *.bat файлы в каталоге, который определяет пользователь. Все сценарии должны запускаться с параметром, который также запрашивается у пользователя. Использование командного сценария должно быть удобным для пользователя, интерфейс понятным, сценарий должен адекватно обрабатывать ошибки и исключительные ситуации.
13
Напишите командный сценарий, который выводит в файл список файлов заданного каталога в порядке, обратном алфавитному. Каталог и файл для вывода необходимо запросить у пользователя. Использование командного сценария должно быть удобным для пользователя, интерфейс понятным, сценарий должен адекватно обрабатывать ошибки и исключительные ситуации.
14
Напишите командный сценарий, который выводит в файл список файлов заданного каталога в порядке возрастания размера файла. Каталог и файл для вывода необходимо запросить у пользователя. Использование командного сценария должно быть удобным для пользователя, интерфейс понятным, сценарий должен адекватно обрабатывать ошибки и исключительные ситуации.
15
Напишите командный сценарий, который выводит в файл список файлов заданного каталога в порядке убывания размера файла. Каталог и файл для вывода необходимо запросить у пользователя. Использование командного сценария должно быть удобным для пользователя, интерфейс понятным, сценарий должен адекватно обрабатывать ошибки и исключительные ситуации.
16
Напишите командный сценарий, который выводит в файл список файлов заданного каталога в порядке даты модификации от самого старого к самому новому. Каталог и файл для вывода необходимо запросить у пользователя. Использование командного сценария должно быть удобным для пользователя, интерфейс понятным, сценарий должен адекватно обрабатывать ошибки и исключительные ситуации.
17
Напишите командный сценарий, который выводит в файл список файлов заданного каталога в порядке даты модификации от самого нового к самому старому. Каталог и файл для вывода необходимо запросить у пользователя. Использование командного сценария должно быть удобным для пользователя, интерфейс понятным, сценарий должен адекватно обрабатывать ошибки и исключительные ситуации.
18
В каталоге имеются файлы с различными расширениями. У пользователя периодически возникает задача копирования файлов с определенным расширением в другой каталог. Расширения могут быть каждый раз разные. Необходимо автоматизировать данную задачу с использованием командных сценариев Windows. Использование командного сценария должно быть удобным для пользователя, интерфейс понятным, сценарий должен адекватно обрабатывать ошибки и исключительные ситуации. Расширение и каталоги необходимо запросить у пользователя.
     
№ п/п
Контролируемые разделы
Кол-во вопросов порогового уровня
Кол-во вопросов базового уровня
1
Понятие и классификация операционных систем
1
-
2
Операционные оболочки
2
1
3
Принципы и концепции мультипрограммирования
1
2
4
Подсистема ввода/вывода. Файловые системы
2
2
5
Основы системного программирования. Работа с файлами
2
1
6
Управление памятью
2
2
7
Многопоточные приложения. Синхронизация потоков
-
2
     
Характеристики ответа
Баллы
Написанный сценарий полностью соответствует заданию, имеет понятный интерфейс, адекватно обрабатывает ошибки и исключительные ситуации. Имеющиеся ошибки несущественны.
15-20
Написанный сценарий соответствует заданию, имеются замечания по интерфейсу пользователя, обработке ошибок и исключительных ситуаций, стилю и логике работы сценария.
10-15
Написанный сценарий соответствует заданию частично.
5-10
Сценарий не соответствует заданию
0

Министерство образования и науки Российской Федерации
Федеральное государственное бюджетное образовательное учреждение 
высшего образования
"Челябинский государственный университет" (ФГБОУ ВО "ЧелГУ")
  Институт информационных технологий
Кафедра информационных технологий и экономической информатикиФонд оценочных средств промежуточной аттестации по дисциплине "Операционные системы"
по направлению подготовки 09.03.01 "Информатика и вычислительная техника" ФГБОУ ВО "ЧелГУ"Версия документа  - 1стр. 1 из 18Первый экземпляр __________КОПИЯ № _____




? ФГБОУ ВО "ЧелГУ"



Министерство образования и науки Российской Федерации
Федеральное государственное бюджетное образовательное учреждение 
высшего профессионального образования
"Челябинский государственный университет" (ФГБОУ ВПО "ЧелГУ")
  Институт информационных технологий
Кафедра информационных технологий и экономической информатикиФонд оценочных средств промежуточной аттестации по дисциплине "Операционные системы"
по направлению подготовки 09.03.01 "Информатика и вычислительная техника"
ФГБОУ ВПО "ЧелГУ" Версия документа  - 1стр. 1 из 19Первый экземпляр __________КОПИЯ № _____

? ФГБОУ ВПО "ЧелГУ"


